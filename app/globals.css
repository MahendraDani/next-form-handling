@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;

    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;

    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;

    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;

    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;

    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;

    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;

    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;

    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;

    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;

    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;

    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

h1 {
  @apply text-4xl font-extrabold tracking-tight lg:text-5xl text-primary;
}

.underLine {
  background-size: 100% 1px;
  background-position: 0 1.25rem;
  background-repeat: no-repeat;
}

.underLine:hover {
  background-image: linear-gradient(
    rgba(209, 213, 219, 30),
    rgba(209, 213, 219, 30)
  );
  background-size: 100% 1px;
}

span.keyword,
span.punctionation {
  @apply text-slate-500;
}

span.function-variable {
  @apply text-slate-600;
}

span.operator,
span.attr-equals {
  @apply text-slate-400;
}

span.builtin {
  /* @apply text-yellow-700; */
  @apply text-emerald-700;
}

span.arrow {
  @apply text-gray-500;
}

span.property-access {
  @apply text-slate-400;
}

span {
  @apply text-slate-400;
}

.linenumber,
.react-syntax-highlighter-line-number,
.comment {
  @apply text-slate-700;
}

span.function,
span.maybe-class-name {
  @apply text-teal-400;
}

span.tag {
  @apply text-zinc-700;
}

span.attr-name,
span.attr-value {
  @apply text-emerald-700;
}

span.attr-equals {
  @apply text-gray-400;
}

span.maybe-class-name {
  @apply text-emerald-600;
}

span.string {
  @apply text-emerald-700;
}

/*
To think of colors for
1. keyword - yellow
2. module - blue
3. function-variable - green
4. operator - red
5. punctuation - cyan
6. arrow - pink
7. property-access - cadetblue
8. span(with no extra classes) - darkorange
9. linenumber - aquamarine
10. comment - 
11. string
12. attr-name
13. tag
14. attr-value
*/

/*
SAME COLORS
punctionation - keyword
span -> arguments

*/

/* .noise {
  width: 100%;
  height: 100px;
  filter: contrast(170%) brightness(1000%);
  background: linear-gradient(0deg, rgba(0, 0, 255, 1), rgba(0, 0, 0, 0)),
    url("data:image/svg+xml,%3Csvg viewBox='0 0 250 250' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.95' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
} */

/* .noise {
  height: 100%;
  background: linear-gradient(20deg, rebeccapurple, transparent),
    url("data:image/svg+xml,%3Csvg viewBox='0 0 250 250' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.95' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  filter: contrast(170%) brightness(1000%);
} */

/* body {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  background-color: powderblue;
} */

/* section {
  position: relative;
  width: 400px;
  height: 100px;
  box-shadow: rgb(50 50 93 / 20%) 0px 30px 60px -12px,
    rgb(0 0 0 / 28%) 0px 18px 36px -18px;
} */

/* .overlay {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  background: moccasin;
  mix-blend-mode: multiply;
} */

/* <section>
<div className="isolate">
  <div className="noise"></div>
  <div className="overlay"></div>
</div>
</section> */
